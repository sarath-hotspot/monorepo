/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/deserialize-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/deserialize-ts.mustache,
 * and run node ./scripts/manifest/generateFormatTypes.js to regenerate this file.
 */

import {
  {{type}},
  Any{{type}},
  migrate{{type}},
  validate{{type}},
  latest{{type}}Format,
} from ".";
import { DeserializeManifestOptions } from "../../";

import { compare } from "semver";
import YAML from "js-yaml";
import { Tracer } from "@web3api/tracing-js";

export const deserialize{{type}} = Tracer.traceFunc(
  "core: deserialize{{type}}",
  (manifest: string, options?: DeserializeManifestOptions): {{type}} => {
    let any{{type}}: Any{{type}} | undefined;
    try {
      any{{type}} = JSON.parse(manifest) as Any{{type}};
    } catch (e) {
      any{{type}} = YAML.safeLoad(manifest) as
      | Any{{type}}
      | undefined;
    }

    if (!any{{type}}) {
      throw Error(`Unable to parse {{type}}: ${manifest}`);
    }

    if (!options || !options.noValidate) {
      validate{{type}}(any{{type}}, options?.extSchema);
    }

    any{{type}}.__type = "{{type}}";

    const versionCompare = compare(
      any{{type}}.format,
      latest{{type}}Format
    );

    if (versionCompare === -1) {
      // Upgrade
      return migrate{{type}}(any{{type}}, latest{{type}}Format);
    } else if (versionCompare === 1) {
      // Downgrade
      throw Error(
        `Cannot downgrade Web3API version ${any{{type}}.format}, please upgrade your Web3ApiClient package.`
      );
    } else {
      // Latest
      return any{{type}} as {{type}};
    }
  }
);
